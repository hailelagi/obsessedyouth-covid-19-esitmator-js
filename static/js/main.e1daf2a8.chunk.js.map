{"version":3,"sources":["components/Header.jsx","components/Estimate.jsx","estimator.js","components/Form.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","href","React","Component","Estimate","props","state","visual","handleCollapse","bind","handleUpdate","this","setState","onEstimate","htmlFor","name","data-go-estimate","type","onClick","covid19ImpactEstimator","data","time","impact","severeImpact","currentlyInfected","reportedCases","periodType","Math","trunc","timeToElapse","infectionsByRequestedTime","severeCasesByRequestedTime","bedAvailability","totalHospitalBeds","rqt","sRqt","hospitalBedsByRequestedTime","icuSevere","ventilators","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","pop","region","avgDailyIncomePopulation","avg","avgDailyIncomeInUSD","sev","rate","dollarsInFlight","Form","population","handleEstimate","handlePop","handleTime","handleReport","handleBeds","handlePeriod","handleSubmit","listItems","undefined","display","bigData","blueData","Object","values","obj","push","entries","map","entry","key","toString","event","target","value","avgAge","preventDefault","parseInt","className","onSubmit","icon","faUsers","size","data-population","onChange","required","placeholder","faHourglassEnd","data-time-to-elapse","faFileSignature","data-reported-cases","faProcedures","data-total-hospital-beds","faCalendarAlt","data-period-type","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e1daf2a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <header>\r\n                    <h1>covid-19 estimator</h1>\r\n                    <p>A novelty COVID-19 infections estimator. This is an eligibility assessment for the <a href=\"https://buildforsdg.andela.com/\">#BuildforSDG</a> program</p>\r\n                </header>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","import React, {Component} from 'react';\r\n\r\nclass Estimate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {visual: true};\r\n\r\n        this.handleCollapse = this.handleCollapse.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n    }\r\n    handleCollapse(){\r\n        this.setState({visual: false});\r\n    }\r\n    handleUpdate(){\r\n        this.setState({visual: true})\r\n    }\r\n    render() {\r\n        if (this.props.onEstimate() !== \"default\" && this.state.visual){\r\n            return (\r\n            <React.Fragment>\r\n                <label htmlFor = 'goEstimate'>\r\n                <button name='goEstimate' data-go-estimate=\"\" type=\"submit\" onClick={this.handleCollapse} >Collapse</button>\r\n            </label>\r\n                <ul>{this.props.onEstimate()}</ul>\r\n            </React.Fragment>\r\n        );\r\n        }\r\n        return (\r\n            <label htmlFor = 'goEstimate'>\r\n                <button name='goEstimate' data-go-estimate=\"\" type=\"submit\" onClick={this.handleUpdate}>Estimate</button>\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Estimate;","const covid19ImpactEstimator = (data) => {\r\n  const impact = {};\r\n  const severeImpact = {};\r\n  let time;\r\n\r\n  // challenge one\r\n  impact.currentlyInfected = data.reportedCases * 10;\r\n  severeImpact.currentlyInfected = data.reportedCases * 50;\r\n\r\n  // period estimations\r\n  if (data.periodType === 'days') time = 2 ** Math.trunc(data.timeToElapse / 3);\r\n  else if (data.periodType === 'weeks') time = 2 ** Math.trunc((data.timeToElapse * 7) / 3);\r\n  else if (data.periodType === 'months') time = 2 ** Math.trunc((data.timeToElapse * 30) / 3);\r\n\r\n  impact.infectionsByRequestedTime = impact.currentlyInfected * time;\r\n  severeImpact.infectionsByRequestedTime = severeImpact.currentlyInfected * time;\r\n\r\n  // challenge two\r\n  impact.severeCasesByRequestedTime = 0.15 * impact.infectionsByRequestedTime;\r\n  severeImpact.severeCasesByRequestedTime = 0.15 * severeImpact.infectionsByRequestedTime;\r\n\r\n  const bedAvailability = 0.35 * data.totalHospitalBeds;\r\n  // eslint variable name length fix, guideline variables are extremely long\r\n  const rqt = impact.severeCasesByRequestedTime;\r\n  const sRqt = severeImpact.severeCasesByRequestedTime;\r\n  impact.hospitalBedsByRequestedTime = Math.trunc(bedAvailability - rqt);\r\n  severeImpact.hospitalBedsByRequestedTime = Math.trunc(bedAvailability - sRqt);\r\n\r\n  // challenge three\r\n  const icuSevere = 0.05 * severeImpact.infectionsByRequestedTime;\r\n  const ventilators = 0.02 * severeImpact.infectionsByRequestedTime;\r\n\r\n  impact.casesForICUByRequestedTime = Math.trunc(0.05 * impact.infectionsByRequestedTime);\r\n  severeImpact.casesForICUByRequestedTime = Math.trunc(icuSevere);\r\n  impact.casesForVentilatorsByRequestedTime = Math.trunc(0.02 * impact.infectionsByRequestedTime);\r\n  severeImpact.casesForVentilatorsByRequestedTime = Math.trunc(ventilators);\r\n  // eslint variable name length fix\r\n  const pop = data.region.avgDailyIncomePopulation;\r\n  const avg = data.region.avgDailyIncomeInUSD;\r\n  const sev = severeImpact.infectionsByRequestedTime;\r\n  let rate = 0;\r\n  if (data.periodType === 'days') rate = data.timeToElapse;\r\n  else if (data.periodType === 'weeks') rate = (data.timeToElapse * 7);\r\n  else if (data.periodType === 'months') rate = (data.timeToElapse * 30);\r\n\r\n  impact.dollarsInFlight = Math.trunc((impact.infectionsByRequestedTime * pop * avg) / rate);\r\n  severeImpact.dollarsInFlight = Math.trunc((sev * pop * avg) / rate);\r\n\r\n  return {\r\n    impact,\r\n    severeImpact\r\n  };\r\n};\r\n\r\nexport default covid19ImpactEstimator;\r\n","import React from 'react';\r\nimport Estimate from \"./Estimate.jsx\";\r\nimport covid19ImpactEstimator from \"../estimator\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers,faHourglassEnd,faFileSignature,faProcedures,faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {population: \"\"};\r\n    this.state = {timeToElapse: \"\"};\r\n    this.state = {reportedCases: \"\"};\r\n    this.state = {totalHospitalBeds: \"\"};\r\n    this.state = {periodType: \"days\"};\r\n\r\n    this.handleEstimate = this.handleEstimate.bind(this);\r\n    this.handlePop = this.handlePop.bind(this);\r\n    this.handleTime = this.handleTime.bind(this);\r\n    this.handleReport = this.handleReport.bind(this);\r\n    this.handleBeds = this.handleBeds.bind(this);\r\n    this.handlePeriod = this.handlePeriod.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleEstimate(){\r\n      let listItems = \"default\";\r\n\r\n      if (this.state.display !== undefined){\r\n          let bigData = this.state.display;\r\n          let blueData = [];\r\n          for (let obj of Object.values(bigData)){\r\n            blueData.push(Object.entries(obj))\r\n          }\r\n          for (let collection of blueData){\r\n               listItems = collection.map((entry) => <li key={entry.toString()}>\r\n              {entry[0]} is {entry[1]} </li>)\r\n          }\r\n      }\r\n      return listItems\r\n  }\r\n  handlePop(event) {\r\n    this.setState({population: event.target.value});\r\n  }\r\n  handleTime(event){\r\n      this.setState({timeToElapse: event.target.value});\r\n  }\r\n  handleReport(event){\r\n      this.setState({reportedCases: event.target.value});\r\n  }\r\n    handleBeds(event){\r\n      this.setState({totalHospitalBeds: event.target.value});\r\n  }\r\n    handlePeriod(event){\r\n      this.setState({periodType: event.target.value});\r\n  }\r\n  handleSubmit(event) {\r\n      let data = this.state;\r\n\r\n      if (data.region === undefined) {\r\n          data.region = {\r\n          name: \"Africa\",\r\n          avgAge: 19.7,\r\n          avgDailyIncomeInUSD: 5,\r\n          avgDailyIncomePopulation: 0.71\r\n      }\r\n      }\r\n      event.preventDefault();\r\n\r\n    data.population =  parseInt(data.timeToElapse);\r\n    data.timeToElapse = parseInt(data.timeToElapse);\r\n    data.reportedCases = parseInt(data.reportedCases);\r\n    data.totalHospitalBeds = parseInt(data.totalHospitalBeds);\r\n    //you can use props instead to pass state between components\r\n    this.setState({display:covid19ImpactEstimator(data)})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <form className='estimator' onSubmit={this.handleSubmit}>\r\n            <FontAwesomeIcon icon={faUsers} size=\"2x\" />\r\n        <label htmlFor='population'>\r\n            population\r\n          <input name='population' data-population=\"\" type=\"number\" value={this.state.value} onChange={this.handlePop} required placeholder='Example: 1000'/>\r\n        </label>\r\n            <FontAwesomeIcon icon={faHourglassEnd} size=\"2x\" />\r\n          <label htmlFor='timeToElapse'>\r\n              timeToElapse\r\n          <input name='timeToElapse' data-time-to-elapse=\"\"  type=\"number\" value={this.state.value} onChange={this.handleTime} required placeholder='Example: 5'/>\r\n        </label>\r\n            <FontAwesomeIcon icon={faFileSignature} size=\"2x\" />\r\n          <label htmlFor='reportedCases'>\r\n              reportedCases\r\n          <input name='reportedCases'  data-reported-cases=\"\" type=\"number\" value={this.state.value} onChange={this.handleReport} required placeholder='Example: 8'/>\r\n        </label>\r\n            <FontAwesomeIcon icon={faProcedures} size=\"2x\" />\r\n          <label htmlFor='totalHospitalBeds'>\r\n              totalHospitalBeds\r\n          <input name='totalHospitalBeds' data-total-hospital-beds=\"\" type=\"number\" value={this.state.value} onChange={this.handleBeds} placeholder='Example: 500' required/>\r\n        </label>\r\n            <FontAwesomeIcon icon={faCalendarAlt} size=\"1x\" />\r\n          <label htmlFor='periodType'>\r\n              periodType\r\n              <select name='periodType' data-period-type=\"\" value={this.state.value} onChange={this.handlePeriod} required>\r\n                  <option value='days'>days </option>\r\n                  <option value='weeks'>weeks</option>\r\n                  <option value='months'>months</option>\r\n              </select>\r\n        </label>\r\n            <Estimate onEstimate={this.handleEstimate} />\r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form\r\n","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n                <footer>\r\n                    <p>Made with &#10084; by Haile Lagi &#9400;2020 for #SDG</p>\r\n                </footer>\r\n        );\r\n    }\r\n}\r\nexport default Footer","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header.jsx\";\r\nimport Form from './components/Form.jsx'\r\nimport Footer from \"./components/Footer.jsx\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Form/>\r\n            <Footer/>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}